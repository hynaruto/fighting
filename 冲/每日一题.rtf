{\rtf1\ansi\ansicpg936\cocoartf2578
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset134 STSongti-SC-Regular;\f2\froman\fcharset0 Times-Roman;
\f3\fnil\fcharset0 Menlo-Regular;\f4\fnil\fcharset134 PingFangSC-Regular;}
{\colortbl;\red255\green255\blue255;\red217\green11\blue5;\red0\green0\blue0;\red0\green0\blue0;
\red252\green39\blue18;\red173\green169\blue32;\red32\green32\blue32;\red88\green118\blue71;\red191\green100\blue38;
\red166\green165\blue220;\red254\green187\blue91;\red153\green168\blue186;\red86\green132\blue173;\red78\green122\blue119;
\red109\green109\blue109;\red171\green173\blue198;}
{\*\expandedcolortbl;;\cssrgb\c88946\c14202\c0;\csgray\c0\c0;\cssrgb\c0\c0\c0;
\cssrgb\c100000\c25271\c7591;\csgenericrgb\c67843\c66275\c12549;\csgenericrgb\c12549\c12549\c12549;\csgenericrgb\c34510\c46275\c27843;\csgenericrgb\c74902\c39216\c14902;
\csgenericrgb\c65098\c64706\c86275;\csgenericrgb\c99608\c73333\c35686;\csgenericrgb\c60000\c65882\c72941;\csgenericrgb\c33725\c51765\c67843;\csgenericrgb\c30588\c47843\c46667;
\csgenericrgb\c42745\c42745\c42745;\csgenericrgb\c67059\c67843\c77647;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs48 \cf0 day_1
\fs24 \
\
\cf2 \cb3 1.
\f1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 \'d4\'da\'a3\'a8\'a3\'a9\'c7\'e9\'bf\'f6\'cf\'c2\'ca\'ca\'d2\'cb\'b2\'c9\'d3\'c3
\f2  inline 
\f1 \'b6\'a8\'d2\'e5\'c4\'da\'c1\'aa\'ba\'af\'ca\'fd
\f2  \
A 
\f1 \'ba\'af\'ca\'fd\'cc\'e5\'ba\'ac\'d3\'d0\'d1\'ad\'bb\'b7\'d3\'ef\'be\'e4
\f2  B 
\f1 \'ba\'af\'ca\'fd\'cc\'e5\'ba\'ac\'d3\'d0\'b5\'dd\'b9\'e9\'d3\'ef\'be\'e4
\f2  C 
\f1 \'ba\'af\'ca\'fd\'b4\'fa\'c2\'eb\'c9\'d9\'a1\'a2\'c6\'b5\'b7\'b1\'b5\'f7\'d3\'c3
\f2  D 
\f1 \'ba\'af\'ca\'fd\'b4\'fa\'c2\'eb\'b6\'e0\'a3\'ac\'b2\'bb\'b3\'a3\'b5\'f7\'d3\'c3\cf4 \cb1 \
\
\'b4\'ed\'d1\'a1 D------\'d5\'fd\'c8\'b7\'b4\'f0\'b0\'b8C\
\'bd\'e2\'ce\'f6:\'c4\'da\'c1\'aa\'ba\'af\'ca\'fd\'b5\'c4\'ca\'b9\'d3\'c3\'b3\'a1\'be\'b0\'a3\'ba\'a3\'a81\'a3\'a9\'ba\'af\'ca\'fd\'b1\'be\'c9\'ed\'c4\'da\'c8\'dd\'b1\'c8\'bd\'cf\'c9\'d9\'a3\'ac\'b4\'fa\'c2\'eb\'b1\'c8\'bd\'cf\'b6\'cc\'a3\'ac\'ba\'af\'ca\'fd\'b9\'a6\'c4\'dc\'bc\'f2\'b5\'a5\
                                                 \'a3\'a82\'a3\'a9\'ba\'af\'ca\'fd\'b1\'bb\'b5\'f7\'d3\'c3\'b5\'c4\'c6\'b5\'b7\'b1\'a3\'ac\'b1\'c8\'c8\'e7\'d1\'ad\'bb\'b7\'d6\'d0\'b5\'c4\'ba\'af\'ca\'fd\
         \'c4\'da\'c1\'aa\'ba\'af\'ca\'fd\'b5\'c4\'c0\'fb\'d3\'eb\'b1\'d7\'a3\'ba\'c0\'fb\'a3\'ba\'b1\'dc\'c3\'e2\'c1\'cb\'d6\'b8\'c1\'ee\'c0\'b4\'bb\'d8\'cc\'f8\'d7\'aa\'a3\'bb\'b1\'d7\'a3\'ba\'b4\'fa\'c2\'eb\'b1\'bb\'b8\'b4\'d6\'c6\'c1\'cb\'b6\'e0\'b4\'ce\'a3\'ac\'d4\'f6\'bc\'d3\'c1\'cb\'b4\'fa\'c2\'eb\'c1\'bf\'a3\'ac\'d5\'bc\'d3\'c3\'b8\'fc\'b6\'e0\'bf\'d5\'bc\'e4\
         \'b2\'bb\'ca\'ca\'d3\'c3\'b5\'c4\'b3\'a1\'be\'b0\'a3\'ba\'ba\'af\'ca\'fd\'b4\'fa\'c2\'eb\'b6\'e0\'a3\'ac\'b9\'a6\'c4\'dc\'b8\'b4\'d4\'d3\'a3\'ac\'cc\'e5\'bb\'fd\'c5\'d3\'b4\'f3\'a3\'bb\'b5\'dd\'b9\'e9\'ba\'af\'ca\'fd\
\
\pard\pardeftab720\partightenfactor0
\cf5 2.\'d4\'da
\f2  c++ 
\f1 \'d3\'ef\'d1\'d4\'d6\'d0\'a3\'ac\'b6\'d4\'ba\'af\'ca\'fd\'b2\'ce\'ca\'fd\'c4\'ac\'c8\'cf\'d6\'b5\'c3\'e8\'ca\'f6\'d5\'fd\'c8\'b7\'b5\'c4\'ca\'c7\'a3\'a8\'a3\'a9\

\f2  A 
\f1 \'ba\'af\'ca\'fd\'b2\'ce\'ca\'fd\'b5\'c4\'c4\'ac\'c8\'cf\'d6\'b5\'d6\'bb\'c4\'dc\'c9\'e8\'b6\'a8\'d2\'bb\'b8\'f6
\f2  \
 B 
\f1 \'d2\'bb\'b8\'f6\'ba\'af\'ca\'fd\'b5\'c4\'b2\'ce\'ca\'fd\'c8\'f4\'d3\'d0\'b6\'e0\'b8\'f6\'a3\'ac\'d4\'f2\'b2\'ce\'ca\'fd\'c4\'ac\'c8\'cf\'d6\'b5\'b5\'c4\'c9\'e8\'b6\'a8\'bf\'c9\'d2\'d4\'b2\'bb\'c1\'ac\'d0\'f8\

\f2  C 
\f1 \'ba\'af\'ca\'fd\'b2\'ce\'ca\'fd\'b1\'d8\'d0\'eb\'c9\'e8\'b6\'a8\'c4\'ac\'c8\'cf\'d6\'b5
\f2  \
 D 
\f1 \'d4\'da\'c9\'e8\'b6\'a8\'c1\'cb\'b2\'ce\'ca\'fd\'b5\'c4\'c4\'ac\'c8\'cf\'d6\'b5\'ba\'f3\'a3\'ac\'b8\'c3\'b2\'ce\'ca\'fd\'ba\'f3\'c3\'e6\'b6\'a8\'d2\'e5\'b5\'c4\'cb\'f9\'d3\'d0\'b2\'ce\'ca\'fd\'b6\'bc\'b1\'d8\'d0\'eb\'c9\'e8\'b6\'a8\'c4\'ac\'c8\'cf\'d6\'b5\cf4 \
\
\'bd\'e2\'ce\'f6\'a3\'ba\'b6\'d4\'d3\'daA\'d1\'a1\'cf\'ee\'c0\'b4\'cb\'b5\'a3\'ac\'ba\'af\'ca\'fd\'b2\'ce\'ca\'fd\'b5\'c4\'c4\'ac\'c8\'cf\'d6\'b5\'bf\'c9\'d2\'d4\'c9\'e8\'d6\'c3\'b6\'e0\'b8\'f6\'a3\'bb\'b6\'d4\'d3\'daB\'d1\'a1\'cf\'ee\'a3\'ac\'ba\'af\'ca\'fd\'b2\'ce\'ca\'fd\'c8\'f4\'d3\'d0\'b6\'e0\'b8\'f6\'ca\'b1\'a3\'ac\'c9\'e8\'d6\'c3\'b9\'e6\'d4\'f2\'d2\'aa\'c3\'b4\'ca\'c7\'c8\'ab\'c8\'b1\'ca\'a1\'a3\'ac\'d2\'aa\'c3\'b4\'ca\'c7\'b0\'eb\'c8\'b1\'ca\'a1\'a1\'a3\'b6\'d4\'d3\'da\'b4\'f8\'b2\'ce\'ca\'fd\'b5\'c4\'ba\'af\'ca\'fd\'a3\'ac\'c9\'e8\'d6\'c3\'c4\'ac\'c8\'cf\'d6\'b5\'b5\'c4\'b7\'bd\'cf\'f2\'b1\'d8\'d0\'eb\'ca\'c7\'b4\'d3\'d7\'f3\'b5\'bd\'d3\'d2\'a1\'a3\'b6\'d4\'d3\'daC\'d1\'a1\'cf\'ee\'a3\'ac\'ba\'af\'ca\'fd\'b2\'ce\'ca\'fd\'d4\'da\'b2\'bb\'c9\'e8\'d6\'c3\'c4\'ac\'c8\'cf\'b2\'ce\'ca\'fd\'ca\'b1\'a3\'ac\'c4\'ac\'c8\'cf\'b3\'f5\'ca\'bc\'bb\'af\'ce\'aa0\'a3\'bb\'b6\'d4\'d3\'eb\'d1\'a1\'cf\'eeD\'a3\'ba\'d4\'da\'c9\'e8\'b6\'a8\'c1\'cb\'b2\'ce\'ca\'fd\'b5\'c4\'c4\'ac\'c8\'cf\'d6\'b5\'d2\'d4\'ba\'f3\'a3\'ac\'ba\'f3\'c3\'e6\'b5\'c4\'b2\'ce\'ca\'fd\'b1\'d8\'d0\'eb\'c9\'e8\'b6\'a8\'c4\'ac\'c8\'cf\'d6\'b5\'a3\'ac\'b7\'f1\'d4\'f2\'b1\'e0\'d2\'eb\'c6\'f7\'ce\'de\'b7\'a8\'c5\'d0\'b6\'cf\'d4\'da\'b5\'f7\'d3\'c3\'b5\'c4\'ca\'b1\'ba\'f2\'ca\'c7\'b7\'f1\'d3\'d0\'b2\'ce\'ca\'fd\'d2\'c5\'c2\'a9\'a1\'a3\
\
\
\'a1\'be\'d7\'e9\'b6\'d3\'be\'ba\'c8\'fc\'a1\'bf\'c5\'a3\'c5\'a3\'be\'d9\'b0\'ec\'c1\'cb\'d2\'bb\'b4\'ce\'b1\'e0\'b3\'cc\'b1\'c8\'c8\'fc
\f2 ,
\f1 \'b2\'ce\'bc\'d3\'b1\'c8\'c8\'fc\'b5\'c4\'d3\'d0
\f2 3*n
\f1 \'b8\'f6\'d1\'a1\'ca\'d6
\f2 ,
\f1 \'c3\'bf\'b8\'f6\'d1\'a1\'ca\'d6\'b6\'bc\'d3\'d0\'d2\'bb\'b8\'f6\'cb\'ae\'c6\'bd\'d6\'b5
\f2 a_i.
\f1 \'cf\'d6\'d4\'da\'d2\'aa\'bd\'ab\'d5\'e2\'d0\'a9\'d1\'a1\'ca\'d6\'bd\'f8\'d0\'d0\'d7\'e9\'b6\'d3
\f2 ,
\f1 \'d2\'bb\'b9\'b2\'d7\'e9\'b3\'c9
\f2 n
\f1 \'b8\'f6\'b6\'d3\'ce\'e9
\f2 ,
\f1 \'bc\'b4\'c3\'bf\'b8\'f6\'b6\'d3\'ce\'e9
\f2 3
\f1 \'c8\'cb
\f2 .
\f1 \'c5\'a3\'c5\'a3\'b7\'a2\'cf\'d6
\f2  
\f1 \'b6\'d3\'ce\'e9\'b5\'c4\'cb\'ae\'c6\'bd\'d6\'b5\'b5\'c8\'d3\'da\'b8\'c3\'b6\'d3\'ce\'e9\'b6\'d3\'d4\'b1\'d6\'d0\'b5\'da\'b6\'fe\'b8\'df\'cb\'ae\'c6\'bd\'d6\'b5\'a1\'a3\

\f2  
\f1 \'c0\'fd\'c8\'e7
\f2 : 
\f1 \'d2\'bb\'b8\'f6\'b6\'d3\'ce\'e9\'c8\'fd\'b8\'f6\'b6\'d3\'d4\'b1\'b5\'c4\'cb\'ae\'c6\'bd\'d6\'b5\'b7\'d6\'b1\'f0\'ca\'c7
\f2 3,3,3.
\f1 \'c4\'c7\'c3\'b4\'b6\'d3\'ce\'e9\'b5\'c4\'cb\'ae\'c6\'bd\'d6\'b5\'ca\'c7
\f2 3 \
           
\f1 \'d2\'bb\'b8\'f6\'b6\'d3\'ce\'e9\'c8\'fd\'b8\'f6\'b6\'d3\'d4\'b1\'b5\'c4\'cb\'ae\'c6\'bd\'d6\'b5\'b7\'d6\'b1\'f0\'ca\'c7
\f2 3,2,3.
\f1 \'c4\'c7\'c3\'b4\'b6\'d3\'ce\'e9\'b5\'c4\'cb\'ae\'c6\'bd\'d6\'b5\'ca\'c7
\f2 3 \
           
\f1 \'d2\'bb\'b8\'f6\'b6\'d3\'ce\'e9\'c8\'fd\'b8\'f6\'b6\'d3\'d4\'b1\'b5\'c4\'cb\'ae\'c6\'bd\'d6\'b5\'b7\'d6\'b1\'f0\'ca\'c7
\f2 1,5,2.
\f1 \'c4\'c7\'c3\'b4\'b6\'d3\'ce\'e9\'b5\'c4\'cb\'ae\'c6\'bd\'d6\'b5\'ca\'c7
\f2 2 \
           
\f1 \'ce\'aa\'c1\'cb\'c8\'c3\'b1\'c8\'c8\'fc\'b8\'fc\'d3\'d0\'bf\'b4\'b5\'e3
\f2 ,
\f1 \'c5\'a3\'c5\'a3\'cf\'eb\'b0\'b2\'c5\'c5\'b6\'d3\'ce\'e9\'ca\'b9\'cb\'f9\'d3\'d0\'b6\'d3\'ce\'e9\'b5\'c4\'cb\'ae\'c6\'bd\'d6\'b5\'d7\'dc\'ba\'cd\'d7\'ee\'b4\'f3\'a1\'a3
\f2  \
           
\f1 \'c8\'e7\'d1\'f9\'c0\'fd\'cb\'f9\'ca\'be
\f2 : 
\f1 \'c8\'e7\'b9\'fb\'c5\'a3\'c5\'a3\'b0\'d1
\f2 6
\f1 \'b8\'f6\'b6\'d3\'d4\'b1\'bb\'ae\'b7\'d6\'b5\'bd\'c1\'bd\'b8\'f6\'b6\'d3\'ce\'e9
\f2  \
           
\f1 \'c8\'e7\'b9\'fb\'b7\'bd\'b0\'b8\'ce\'aa
\f2 : team1:\{1,2,5\}, team2:\{5,5,8\}, 
\f1 \'d5\'e2\'ca\'b1\'ba\'f2\'cb\'ae\'c6\'bd\'d6\'b5\'d7\'dc\'ba\'cd\'ce\'aa
\f2 7. \
           
\f1 \'b6\'f8\'c8\'e7\'b9\'fb\'b7\'bd\'b0\'b8\'ce\'aa
\f2 : team1:\{2,5,8\}, team2:\{1,5,5\}, 
\f1 \'d5\'e2\'ca\'b1\'ba\'f2\'cb\'ae\'c6\'bd\'d6\'b5\'d7\'dc\'ba\'cd\'ce\'aa
\f2 10. \
           
\f1 \'c3\'bb\'d3\'d0\'b1\'c8\'d7\'dc\'ba\'cd\'ce\'aa
\f2 10
\f1 \'b8\'fc\'b4\'f3\'b5\'c4\'b7\'bd\'b0\'b8
\f2 ,
\f1 \'cb\'f9\'d2\'d4\'ca\'e4\'b3\'f6
\f2 10.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f3 \cf6 \cb7 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 #include \cf8 <vector>\
\cf6 #include \cf8 <algorithm>\
\cf6 #include \cf8 <iostream>\
\cf9 using namespace \cf10 std\cf9 ;\
int \cf11 main\cf12 ()\
\{\
    \cf9 int \cf12 n = \cf13 0\cf9 ;\
    while \cf12 (cin \cf14 >> \cf12 n)\
    \{\
        \cf10 vector\cf12 <\cf9 int\cf12 >nums(\cf13 3 \cf12 * n)\cf9 ;\
        long \cf12 max = \cf13 0\cf9 ;\
        for \cf12 (\cf9 int \cf12 i = \cf13 0\cf9 ; \cf12 i <nums.size()\cf9 ;\cf12 ++i)\
            cin\cf14 >>\cf12 nums\cf14 [\cf12 i]\cf9 ;\
        \cf12 sort(nums.begin()\cf9 ,\cf12 nums.end())\cf9 ;\
        for \cf12 (\cf9 int \cf12 i = n\cf9 ;\cf12 i <= nums.size() - \cf13 2\cf9 ;\cf12 i += \cf13 2\cf12 )\
            max += nums\cf14 [\cf12 i]\cf9 ;\
        \cf12 cout\cf14 <<\cf12 max\cf14 <<\cf12 endl\cf9 ;\
    \cf12 \}\
\}\
\pard\pardeftab720\partightenfactor0

\f1 \cf4 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 \
\
\
\'a1\'be\'c9\'be\'b3\'fd\'b9\'ab\'b9\'b2\'d7\'d6\'b7\'fb\'a1\'bf\'ca\'e4\'c8\'eb\'c1\'bd\'b8\'f6\'d7\'d6\'b7\'fb\'b4\'ae\'a3\'ac\'b4\'d3\'b5\'da\'d2\'bb\'d7\'d6\'b7\'fb\'b4\'ae\'d6\'d0\'c9\'be\'b3\'fd\'b5\'da\'b6\'fe\'b8\'f6\'d7\'d6\'b7\'fb\'b4\'ae\'d6\'d0\'cb\'f9\'d3\'d0\'b5\'c4\'d7\'d6\'b7\'fb\'a1\'a3\'c0\'fd\'c8\'e7\'a3\'ac\'ca\'e4\'c8\'eb
\f2 \'94They are students.\'94
\f1 \'ba\'cd
\f2 \'94aeiou\'94
\f1 \'a3\'ac\'d4\'f2\'c9\'be\'b3\'fd\'d6\'ae\'ba\'f3\'b5\'c4\'b5\'da\'d2\'bb\'b8\'f6\'d7\'d6\'b7\'fb
\f2  
\f1 \'b4\'ae\'b1\'e4\'b3\'c9
\f2 \'94Thy r stdnts.\'94\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f3 \cf15 \cb7 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 //
\f4 \'d4\'da\'b5\'da\'d2\'bb\'b8\'f6\'d7\'d6\'b7\'fb\'b4\'ae\'d6\'d0\'c9\'be\'b3\'fd\'b5\'da\'b6\'fe\'b8\'f6\'d7\'d6\'b7\'fb\'b4\'ae\'d6\'d0\'b3\'f6\'cf\'d6\'b5\'c4\'cb\'f9\'d3\'d0\'d7\'d6\'c4\'b8
\f3 \
\cf6 #include\cf8 <iostream>\
\cf6 #include \cf8 <algorithm>\
\cf9 using namespace \cf10 std\cf9 ;\
class \cf10 Solution\
\cf12 \{\
\cf9 public\cf12 :\
    \cf9 void \cf11 delect_str\cf12 (\cf16 string \cf12 &str1\cf9 ,\cf16 string \cf12 &str2)\
    \{\
        \cf9 if \cf12 (str1.empty() || str2.empty())\
            \cf9 return;\
        for \cf12 (\cf9 int \cf12 i = \cf13 0\cf9 ;\cf12 i < str1.size()\cf9 ;\cf12 ++i)\
        \{\
            \cf9 for \cf12 (\cf9 int \cf12 j = \cf13 0\cf9 ;\cf12 j < str2.size()\cf9 ;\cf12 ++j)\
            \{\
                \cf9 int \cf12 pos = str1.find(str2\cf14 [\cf12 j])\cf9 ;\
                if \cf12 (pos == -\cf13 1\cf12 )\
                    \cf9 continue;\
                \cf12 str1.erase(pos\cf9 ,\cf13 1\cf12 )\cf9 ;\
            \cf12 \}\
        \}\
    \}\
\}\cf9 ;\
\
int \cf12 main()\
\{\
    \cf10 std\cf12 ::\cf16 string \cf12 str1\cf9 ;\
    \cf10 std\cf12 ::\cf16 string \cf12 str2\cf9 ;\
    \cf10 std\cf12 ::getline(\cf10 std\cf12 ::cin\cf9 ,\cf12 str1)\cf9 ;\
    \cf10 std\cf12 ::getline(\cf10 std\cf12 ::cin\cf9 ,\cf12 str2)\cf9 ;\
    \cf10 Solution \cf12 S\cf9 ;\
    \cf12 S.delect_str(str1\cf9 ,\cf12 str2)\cf9 ;\
    \cf12 cout\cf14 <<\cf12 str1\cf14 <<\cf12 endl\cf9 ;\
\cf12 \}\
\
\pard\pardeftab720\partightenfactor0

\f2 \cf4 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 \
}